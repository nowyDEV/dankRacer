{"version":3,"sources":["assets/images/carmageddon-max-damage.jpg","assets/fonts/starcraftnormal.woff","assets/fonts/starcraftnormal.woff2","styles/index.ts","styles/themeUtils.ts","components/game/game.styles.ts","components/cameraView/cameraView.styles.ts","components/cameraView/cameraView.component.tsx","components/gameText/gameText.styles.ts","components/gameText/config.ts","components/gameText/gameText.helpers.ts","components/gameText/useBindCodeCharacters.tsx","components/gameText/codeCursor.ts","components/gameText/gameText.component.tsx","components/game/game.component.tsx","api/agent.ts","components/hooks/useApiData.ts","shared/index.ts","components/game/game.container.tsx","serviceWorker.ts","styles/reset.ts","styles/fonts.js","styles/global.tsx","index.tsx"],"names":["module","exports","FlexCenter","themeUtils","color","white","black","font","small","base","medium","large","fontFamily","primary","secondary","breakpoints","desktop","transition","Wrapper","BackgroundImage","Container","Status","Image","CameraView","src","alt","alphaKeys","numericKeys","specialKeys","actionKeys","NON_TYPEABLES","getKeyEvents","allAlphaKeys","map","key","toUpperCase","prevAll","element","el","previousElementSibling","result","HTMLElement","push","isNonTypable","classes","some","className","classList","contains","hasClass","bindCodeCharacters","wrapper","codemap","htmlCode","contents","hasChildNodes","childNodes","forEach","elIndex","prev","next","prevText","textContent","nextText","match","charAt","char","beforeComment","index","search","split","charIndex","iterativeFilter","collection","state","loopFn","indices","addSection","lastIdx","curIdx","start","howMany","i","piece","call","filter","leadingSearch","trailingSearch","lastNewline","lastTypeable","setMode","mode","this","firstTypeableFound","newlineFound","typeableFound","lastRelevantNewline","setFound","found","groupedCodemap","_","groupBy","each","codeGroup","elem","elemText","collapseCodeGroup","code","text","chunks","idx","slice","length","join","nodeType","oldClass","attr","newContent","querySelector","outerHTML","add","querySelectorAll","UseBindCodeCharacters","exerciseCode","React","useState","setHtmlCode","useCallback","node","addClasses","classArray","singleClass","CodeCursor","cfg","playerId","playerName","cursor","codeLength","pos","keystrokes","isMistaken","mistakePathLength","mistakes","mistakePositions","isMainPlayer","onCorrectKey","onAdvanceCursor","onRetreatCursor","onGameComplete","processKey","mistakePathKey","correctKey","incorrectKey","advanceCursor","advanceCursorWithClass","curClass","trailingClass","remove","nextElementSibling","retreatCursor","retreatCursorWithClass","backspaceKey","destroy","trim","Mousetrap","require","gameReducer","action","type","startTime","payload","playerCursor","Error","GameText","exercise","onProgress","onStart","htmlData","gameCode","useReducer","time","opponents","opponentCursors","dispatch","started","setStarted","useEffect","document","typeableCode","windowHeight","window","innerHeight","cursorPos","getBoundingClientRect","top","body","scrollTop","pageYOffset","scrollTo","scrollToCursor","updatePlayerProgress","console","log","getElementById","Date","handleBackspace","e","preventDefault","handleKeyPress","newKey","includes","bind","unbind","ref","id","dangerouslySetInnerHTML","__html","appReducer","wpm","progress","Game","data","now","current","total","toFixed","requests","getGameData","Promise","res","setTimeout","GameData","dataFetchReducer","isLoading","isError","UseDataApi","a","agent","items","Math","floor","random","fetchData","GameContainer","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ResetCss","FontCss","css","StarcraftWoff2","StarcraftWoff","GlobalStyles","styles","ReactDOM","render","Fragment","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.079f9a6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carmageddon-max-damage.5d75e7d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starcraftnormal.a66e56cf.woff\";","module.exports = __webpack_public_path__ + \"static/media/starcraftnormal.c8bd7c63.woff2\";","import { css } from '@emotion/core'\n\nexport const FlexCenter = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const FullScreen = css`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 0;\n`\n\nexport const SelfCenter = css`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nexport const HorizontalCenter = css`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n`\n\nexport const FullFixed = css`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n`\n","// app global style variables configuration\n// Took the color names from http://chir.ag/projects/name-that-color\n\nconst themeUtils = {\n  color: {\n    white: '#fff',\n    black: '#000'\n  },\n  font: {\n    small: '1.2rem',\n    base: '1.6rem',\n    medium: '2rem',\n    large: '3rem'\n  },\n  fontFamily: {\n    primary: '\"HelveticaNeue\", \"Helvetica\", \"Arial\", sans-serif',\n    secondary: '\"HelveticaNeue\", \"Helvetica\", \"Arial\", sans-serif'\n  },\n  // in ems\n  breakpoints: {\n    desktop: 90\n  },\n  transition: '400ms ease'\n} as const\n\nexport default themeUtils\n","import styled from '@emotion/styled'\nimport { FlexCenter } from '../../styles'\nimport themeUtils from '../../styles/themeUtils'\nimport BackgroundImage from '../../assets/images/carmageddon-max-damage.jpg'\n\nexport const Wrapper = styled('div')`\n  width: 100%;\n  height: 100%;\n  background: url('${BackgroundImage}') no-repeat;\n  background-size: cover;\n  ${FlexCenter};\n`\n\nexport const Container = styled('div')`\n  width: 960px;\n  height: calc(100vh - 100px);\n  max-height: 900px;\n  background-color: rgba(0, 0, 0, 0.6);\n  color: white;\n  position: relative;\n  ${FlexCenter};\n  flex-flow: column wrap;\n  justify-content: space-between;\n  padding: 30px;\n`\n\nexport const StyledButton = styled('button')`\n  display: block;\n  width: 200px;\n  height: 40px;\n  text-align: center;\n  color: white;\n  border-radius: 6px;\n  background-color: chocolate;\n  cursor: pointer;\n`\n\nexport const StyledInput = styled('input')`\n  height: 30px;\n  background-color: white;\n  color: black;\n  font-size: ${themeUtils.font.medium};\n`\n\nexport const Status = styled('div')`\n  font-size: ${themeUtils.font.medium};\n`\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled('div')`\n  width: 100%;\n  max-width: 300px;\n  margin: 30px auto;\n`\n\nexport const Image = styled('img')`\n  display: block;\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`\n","import React from 'react'\nimport { Wrapper, Image } from './cameraView.styles'\n\nfunction CameraView(): JSX.Element {\n  return (\n    <Wrapper>\n      <Image src=\"https://hotwheelsracetracks.files.wordpress.com/2012/06/img_2870.jpg\" alt=\"race track\" />\n    </Wrapper>\n  )\n}\n\nexport default CameraView\n","import styled from '@emotion/styled'\nimport themeUtils from '../../styles/themeUtils'\n\nexport const Wrapper = styled('pre')`\n  display: block;\n  padding: 10px;\n  margin: 0 0 10px;\n  line-height: 1.4286;\n  color: #7b8a8b;\n  word-break: break-all;\n  word-wrap: break-word;\n  background-color: #ecf0f1;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`\n\nexport const Container = styled('code')`\n  font-family: 'Source Code Pro', monospace;\n  font-size: ${themeUtils.font.small};\n  display: block;\n  padding: 0.5em;\n  color: #333;\n  background: #f8f8ff;\n  white-space: pre-wrap;\n  border-radius: 4px;\n\n  .comment {\n    opacity: 0.7;\n  }\n\n  .code-char {\n    &.untyped {\n      opacity: 0.7;\n    }\n\n    &.typed {\n      opacity: 1;\n    }\n\n    &.mistake {\n      background-color: #df2e1b;\n      color: #fff;\n    }\n\n    &.mistake-path {\n      color: #df2e1b;\n    }\n\n    &.player.mistaken {\n      background-color: #7f9293;\n      color: #fff;\n    }\n\n    &.player {\n      background-color: #1ac7a4;\n      color: #fff;\n    }\n\n    &.opponent {\n      background-color: #3498db;\n      color: #fff;\n    }\n\n    &.return-char {\n      text-align: center;\n      display: inline-block;\n      width: 20px;\n      visibility: hidden;\n\n      &.mistake,\n      &.mistaken-path,\n      &.opponent,\n      &.player {\n        visibility: visible;\n      }\n\n      &::before {\n        content: '\\\\23CE';\n      }\n\n      &.backspace-char::before {\n        content: '\\\\232B';\n      }\n    }\n  }\n`\n","export const alphaKeys = [\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z'\n]\n\nexport const numericKeys = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']\n\nexport const specialKeys = [\n  '`',\n  '~',\n  '!',\n  '@',\n  '#',\n  '$',\n  '%',\n  '^',\n  '&',\n  '*',\n  '(',\n  ')',\n  '-',\n  '_',\n  '=',\n  '+',\n  '[',\n  '{',\n  ']',\n  '}',\n  '\\\\',\n  '|',\n  \"'\",\n  '\"',\n  ';',\n  ':',\n  '/',\n  '?',\n  '.',\n  '>',\n  ',',\n  '<'\n]\n\nexport const actionKeys = ['enter', 'space', 'shift+space', 'shift+enter']\n\nexport const NON_TYPEABLES = ['comment', 'template_comment', 'diff', 'javadoc', 'phpdoc']\n","import { actionKeys, alphaKeys, numericKeys, specialKeys } from './config'\n\nexport function getKeyEvents(): string[] {\n  // Bind key events\n  const allAlphaKeys = [...alphaKeys, ...alphaKeys.map(key => key.toUpperCase())]\n\n  return [...allAlphaKeys, ...numericKeys, ...specialKeys, ...actionKeys]\n}\n\nexport function hasClass(el: HTMLElement, classes: string[]): boolean {\n  if (el instanceof HTMLElement) {\n    return classes.some(className => el.classList.contains(className))\n  }\n  return false\n}\n\nexport function isTextNode(el: HTMLElement): boolean {\n  return el.nodeType === 3\n}\n\nexport function prevAll(element): HTMLElement[] {\n  let el = element.previousElementSibling\n  const result: HTMLElement[] = []\n\n  while (el instanceof HTMLElement) {\n    result.push(el)\n    el = el.previousElementSibling\n  }\n  return result\n}\n","import React from 'react'\nimport _ from 'lodash'\nimport { NON_TYPEABLES } from './config'\nimport { hasClass, isTextNode } from './gameText.helpers'\n\ninterface Code {\n  char: string\n  beforeComment: boolean\n  index: number\n  elIndex: number\n  el: HTMLElement\n}\n\nfunction isNonTypable(el: HTMLElement): boolean {\n  return hasClass(el, NON_TYPEABLES)\n}\n\n/**\n * Extract game code, manipulate references, remove non-typeables,\n * and wrap each character in a specific span tag\n */\nconst bindCodeCharacters = (wrapper: HTMLElement): string => {\n  let codemap: Code[] = []\n  let htmlCode = ''\n\n  if (!(wrapper instanceof HTMLElement)) {\n    return htmlCode\n  }\n\n  const contents = wrapper.hasChildNodes() ? wrapper.childNodes : []\n\n  // Loop through contents of code, and add all non-comment\n  // blocks into the codemap, keeping track of their positions\n  // and elements\n  contents.forEach((el, elIndex) => {\n    if (isNonTypable(el)) {\n      // Handle special case of end-of-line comment\n      const prev = contents[elIndex - 1]\n      const next = contents[elIndex + 1]\n\n      if (prev instanceof HTMLElement && next instanceof HTMLElement) {\n        // End-of-line comment is preceded by non-newline and\n        // followed by newline\n        const prevText = prev.textContent || ''\n        const nextText = next.textContent || ''\n        const isEndOfLineComment = !prevText.match(/\\n\\s*$/) && nextText.charAt(0) === '\\n'\n        if (isEndOfLineComment) {\n          // Add the return at the end of the previous\n          // element\n          codemap.push({\n            char: '\\n',\n            beforeComment: true,\n            index: prevText.search(/\\s*$/),\n            elIndex: elIndex - 1,\n            el: prev\n          })\n        }\n      }\n      return\n    }\n\n    const text = el.textContent || ''\n    text.split('').forEach((char, charIndex) => {\n      codemap.push({\n        char,\n        beforeComment: false,\n        index: charIndex,\n        elIndex,\n        el\n      })\n    })\n  })\n\n  /**\n   * Reusable filter method that keeps track of indices\n   * marked for removal, with custom criteria functions\n   */\n  const iterativeFilter = (collection, state, loopFn): Code[] => {\n    const indices = {}\n    const addSection = (lastIdx: number, curIdx: number): void => {\n      const start = lastIdx + 1\n      const howMany = curIdx - start\n\n      if (howMany > 0) {\n        for (let i = start; i < start + howMany; i++) {\n          indices[i] = true\n        }\n      }\n    }\n\n    collection.forEach((piece, index) => {\n      loopFn.call(state, piece, index, addSection)\n    })\n\n    // Remove the collected indices\n    return collection.filter((piece, index) => {\n      return !indices[index]\n    })\n  }\n\n  // Loop through the codemap and remove occurrences of leading and\n  // trailing whitespace\n  codemap = iterativeFilter(\n    codemap,\n    {\n      leadingSearch: true,\n      trailingSearch: false,\n      lastNewline: -1,\n      lastTypeable: -1,\n      setMode(mode): void {\n        this.leadingSearch = mode === 'leading'\n        this.trailingSearch = mode === 'trailing'\n      }\n    },\n    function check(piece, i, addSection) {\n      if (piece.char === ' ' || piece.char === '\\t') {\n        // Skip over\n        return\n      }\n      if (piece.char === '\\n') {\n        // New line\n        if (this.trailingSearch) {\n          this.setMode('leading')\n          addSection(this.lastTypeable, i)\n        }\n        this.lastNewline = i\n      } else {\n        // Typeable\n        if (this.leadingSearch) {\n          this.setMode('trailing')\n          addSection(this.lastNewline, i)\n        }\n        this.lastTypeable = i\n      }\n    }\n  )\n\n  // Finally, remove contiguous blocks of newline+whitespace,\n  // as well as globally leading whitespace\n  codemap = iterativeFilter(\n    codemap,\n    {\n      firstTypeableFound: false,\n      newlineFound: false,\n      typeableFound: false,\n      lastRelevantNewline: -1,\n      setFound(found): void {\n        this.newlineFound = found === 'newline'\n        this.typeableFound = found === 'typeable'\n        if (found === 'typeable') {\n          this.firstTypeableFound = true\n        }\n      }\n    },\n    function check(piece, i, addSection) {\n      if (piece.char === ' ' || piece.char === '\\t') {\n        // Skip over\n        return\n      }\n      if (piece.char === '\\n') {\n        // Newline\n        if (this.firstTypeableFound && !this.newlineFound) {\n          this.lastRelevantNewline = i\n        }\n        this.setFound('newline')\n      } else {\n        // Typeable\n        if (this.newlineFound) {\n          addSection(this.lastRelevantNewline, i)\n        }\n        this.setFound('typeable')\n      }\n    }\n  )\n\n  // Group remaining code chars by original element, and loop through\n  // every element group and replace the element's text content with the\n  // wrapped code chars\n  // eslint-disable-next-line\n  const groupedCodemap = _.groupBy(codemap, function(piece) {\n    return piece.elIndex\n  })\n\n  // @ts-ignore\n  _.each(groupedCodemap, codeGroup => {\n    const elem = codeGroup[0].el\n    const elemText = elem.textContent || ''\n\n    const collapseCodeGroup = (code, text): string => {\n      const chunks: string[] = []\n      let idx = 0\n\n      code.forEach(piece => {\n        chunks.push(text.slice(idx, piece.index))\n        idx = piece.index + 1\n\n        if (piece.char === '\\n') {\n          chunks.push(`<span class=\"code-char return-char\"></span>`)\n          if (!piece.beforeComment) {\n            chunks.push('\\n')\n          }\n        } else {\n          chunks.push(`<span class=\"code-char\">${piece.char}</span>`)\n        }\n      })\n\n      chunks.push(text.slice(idx, text.length))\n      return chunks.join('')\n    }\n\n    if (isTextNode(elem)) {\n      htmlCode = collapseCodeGroup(codeGroup, elemText)\n    } else {\n      // Re-add highlighting classes to the new spans\n      const oldClass = elem.attr('class')\n      const newContent = wrapper!.querySelector(collapseCodeGroup(codeGroup, elemText))\n      elem.outerHTML = newContent\n      newContent instanceof HTMLElement && newContent.classList.add(oldClass)\n    }\n  })\n\n  // Set all code characters to untyped\n  wrapper.querySelectorAll('.code-char').forEach(el => {\n    el.classList.add('untyped')\n  })\n\n  return htmlCode\n}\n\nfunction UseBindCodeCharacters(exerciseCode: string): any {\n  const [htmlCode, setHtmlCode] = React.useState<string>(exerciseCode)\n  const ref = React.useCallback(node => {\n    if (node !== null) {\n      setHtmlCode(bindCodeCharacters(node) || '')\n    }\n  }, [])\n\n  return [htmlCode, ref]\n}\n\nexport default UseBindCodeCharacters\n","import { prevAll } from './gameText.helpers'\n\nfunction addClasses(el: HTMLElement, classes: string): void {\n  const classArray = classes.split(' ').filter(singleClass => singleClass.length > 0)\n  if (classArray.length > 0) {\n    el.classList.add(...classArray)\n  }\n}\n\n/**\n * Represents a player or opponent's cursor\n */\nclass CodeCursor {\n  playerId\n  playerName\n  cursor\n  code\n  codeLength\n  pos\n  keystrokes\n  isMistaken\n  mistakePathLength\n  mistakes\n  mistakePositions\n  isMainPlayer\n  onCorrectKey\n  onAdvanceCursor\n  onRetreatCursor\n  onGameComplete\n\n  constructor(cfg) {\n    this.playerId = cfg.playerId\n    this.playerName = cfg.playerName\n    this.cursor = cfg.cursor\n    this.code = cfg.code.trim()\n    this.codeLength = cfg.code.length\n    this.pos = 0\n    this.keystrokes = 0\n    this.isMistaken = false\n    this.mistakePathLength = 0\n    this.mistakes = 0\n    this.mistakePositions = []\n\n    this.isMainPlayer = cfg.isMainPlayer || false\n\n    this.onCorrectKey = cfg.onCorrectKey || (() => undefined)\n    this.onAdvanceCursor = cfg.onAdvanceCursor || (() => undefined)\n    this.onRetreatCursor = cfg.onRetreatCursor || (() => undefined)\n    this.onGameComplete = cfg.onGameComplete || (() => undefined)\n\n    this.cursor.classList.add(this.playerName)\n  }\n\n  public processKey = (key): void => {\n    if (this.isMistaken) {\n      this.mistakePathKey()\n    } else if (key === this.code.charAt(this.pos)) {\n      this.correctKey()\n    } else {\n      this.incorrectKey()\n    }\n  }\n\n  private advanceCursor = (): void => {\n    this.advanceCursorWithClass(this.playerName)\n  }\n\n  private advanceCursorWithClass = (curClass, trailingClass = ''): void => {\n    this.keystrokes += 1\n    this.pos += 1\n\n    this.cursor.classList.remove(...curClass.split(' '))\n    if (this.isMainPlayer) {\n      this.cursor.classList.remove('untyped')\n      this.cursor.classList.add('typed')\n    }\n    addClasses(this.cursor, trailingClass)\n    // this.cursor.classList.add(...trailingClass.split(' '))\n\n    this.cursor = this.cursor.nextElementSibling\n    this.cursor.classList.add(...curClass.split(' '))\n\n    this.onAdvanceCursor.call(this, this)\n  }\n\n  private retreatCursor = (): void => {\n    this.retreatCursorWithClass(this.playerName)\n  }\n\n  private retreatCursorWithClass = (curClass, trailingClass = ''): void => {\n    this.keystrokes += 1\n    this.pos -= 1\n    this.mistakePathLength -= 1\n\n    this.cursor.classList.remove(...curClass.split(' '))\n    ;[this.cursor] = prevAll(this.cursor)\n\n    this.cursor.classList.remove(...trailingClass.split(' '))\n    if (this.isMainPlayer) {\n      this.cursor.classList.remove('typed')\n      this.cursor.classList.add('untyped')\n    }\n    this.cursor.classList.add(...curClass.split(' '))\n\n    this.onRetreatCursor.call(this, this)\n  }\n\n  private correctKey = (): void => {\n    this.advanceCursorWithClass(this.playerName)\n\n    this.onCorrectKey.call(this, this)\n    if (this.pos === this.codeLength) {\n      this.onGameComplete.call(this, this)\n    }\n  }\n\n  private incorrectKey = (): void => {\n    // We must *not* be at the final character of the code if we want to\n    // create a mistake path, so check for it\n    if (this.pos < this.codeLength - 1) {\n      this.isMistaken = true\n      this.mistakes += 1\n      this.mistakePositions.push(this.pos)\n      this.advanceCursorWithClass(this.playerName, 'mistake')\n      this.mistakePathLength += 1\n    }\n    // But we do want to highlight a mistake, even if we're at the end\n    // of the code\n    this.cursor.classList.add('mistaken')\n  }\n\n  private mistakePathKey = (): void => {\n    if (this.pos < this.codeLength - 1) {\n      if (this.mistakePathLength < 10) {\n        this.advanceCursorWithClass(`${this.playerName} mistaken`, 'mistake-path')\n        this.mistakePathLength += 1\n      }\n    }\n  }\n\n  public backspaceKey = (): void => {\n    if (this.isMistaken) {\n      this.retreatCursorWithClass(`${this.playerName} mistaken`, 'mistake-path mistake')\n\n      if (this.mistakePathLength === 0) {\n        this.isMistaken = false\n        this.cursor.classList.remove('mistaken')\n      }\n    }\n  }\n\n  public destroy = (): void => {\n    this.cursor.classList.remove(this.playerName)\n  }\n}\n\nexport default CodeCursor\n","import React from 'react'\nimport { Wrapper, Container } from './gameText.styles'\nimport UseBindCodeCharacters from './useBindCodeCharacters'\nimport CodeCursor from './codeCursor'\nimport { getKeyEvents } from './gameText.helpers'\n\nconst Mousetrap = require('mousetrap')\n\ninterface GameState {\n  time: any\n  startTime: any\n  code: any\n  playerCursor: any\n  opponents: any\n  opponentCursors: any\n}\n\nconst gameReducer = (state, action): GameState => {\n  switch (action.type) {\n    case 'START_GAME':\n      return {\n        ...state,\n        startTime: action.payload\n      }\n    case 'SET_CURSOR':\n      return {\n        ...state,\n        playerCursor: action.payload\n      }\n    default:\n      throw new Error('Wrong action provided to the gameReducer')\n  }\n}\n\nfunction GameText({\n  exercise,\n  onProgress,\n  onStart\n}: {\n  exercise: Exercise\n  onProgress: (current: number, total: number) => void\n  onStart: () => void\n}): JSX.Element {\n  const [htmlData, gameCode] = UseBindCodeCharacters(exercise.code)\n  const [state, dispatch] = React.useReducer(gameReducer, {\n    time: null,\n    startTime: null,\n    code: null,\n    playerCursor: null,\n    opponents: 0,\n    opponentCursors: {}\n  })\n  const [started, setStarted] = React.useState(false)\n\n  React.useEffect((): void => {\n    const startGame = (): void => {\n      if (started) {\n        return\n      }\n      // state.startTime = new Date()\n      dispatch({ type: 'START_GAME', payload: new Date() })\n      setStarted(true)\n    }\n\n    const scrollToCursor = (cursor): void => {\n      // Make sure the cursor DOM element exists\n      if (cursor.cursor.length) {\n        const windowHeight = window.innerHeight\n        const cursorPos = cursor.cursor.getBoundingClientRect().top + document.body.scrollTop\n        const windowPos = window.pageYOffset + windowHeight\n\n        // Begin scrolling when 25% from the bottom\n        if (windowPos - cursorPos < windowHeight * 0.25) {\n          window.scrollTo(0, cursorPos - windowHeight * 0.25)\n        }\n      }\n    }\n\n    // TODO\n    const updatePlayerProgress = (cursor): void => {\n      onProgress(cursor.pos, cursor.codeLength)\n    }\n\n    const onPlayerAdvanceCursor = (cursor): void => {\n      scrollToCursor(cursor)\n      updatePlayerProgress(cursor)\n    }\n\n    const completeGame = (cursor): void => {\n      console.log('emit ingame:complete', cursor)\n    }\n\n    if (!state.playerCursor) {\n      const el = document.querySelector('.code-char')\n      if (el instanceof HTMLElement) {\n        dispatch({\n          type: 'SET_CURSOR',\n          payload: new CodeCursor({\n            isMainPlayer: true,\n            playerId: '666',\n            playerName: 'player',\n            cursor: el,\n            code: exercise.typeableCode,\n            onAdvanceCursor: onPlayerAdvanceCursor,\n            onRetreatCursor: null,\n            onGameComplete: completeGame\n          })\n        })\n      }\n    }\n\n    const wrapper = document.getElementById('gamecode')\n    wrapper instanceof HTMLElement &&\n      wrapper.querySelectorAll('.code-char').forEach(el => {\n        el.classList.add('untyped')\n      })\n\n    startGame()\n    onStart()\n  }, [htmlData])\n\n  React.useEffect((): (() => void) => {\n    const handleBackspace = (e, key): void => {\n      e.preventDefault()\n      state.playerCursor.backspaceKey()\n    }\n\n    const handleKeyPress = (e, key): void => {\n      e.preventDefault()\n      const newKey = ['space', 'shift+space'].includes(key) ? ' ' : ['enter', 'shift+enter'].includes(key) ? '\\n' : key\n      state.playerCursor.processKey(newKey)\n    }\n\n    Mousetrap.bind(getKeyEvents(), handleKeyPress)\n    Mousetrap.bind(['backspace', 'shift+backspace'], handleBackspace)\n    return (): void => {\n      Mousetrap.unbind(getKeyEvents(), handleKeyPress)\n      Mousetrap.unbind(['backspace', 'shift+backspace'], handleBackspace)\n    }\n  }, [state.playerCursor])\n\n  return (\n    <Wrapper>\n      <Container>\n        <span ref={gameCode} id=\"gamecode\" dangerouslySetInnerHTML={{ __html: htmlData }} />\n      </Container>\n    </Wrapper>\n  )\n}\n\nexport default GameText\n","import React from 'react'\nimport { Container, Wrapper, Status } from './game.styles'\nimport { CameraView } from '../cameraView'\nimport { GameText } from '../gameText'\n\ninterface State {\n  startTime: number | null\n  wpm: number\n  progress: number\n}\n\nconst appReducer = (state, action): State => {\n  switch (action.type) {\n    case 'START_GAME':\n      return {\n        ...state,\n        startTime: action.payload\n      }\n    case 'MAKE_PROGRESS':\n      return {\n        ...state,\n        wpm: action.payload.wpm,\n        progress: action.payload.progress\n      }\n    default:\n      throw new Error('Wrong action provided to the appReducer')\n  }\n}\n\nfunction Game({ data }: { data: GameInstance }): JSX.Element {\n  const [state, dispatch] = React.useReducer(appReducer, {\n    startTime: null,\n    wpm: 0,\n    progress: 0\n  })\n\n  const handleProgress = (current, total): void => {\n    dispatch({\n      type: 'MAKE_PROGRESS',\n      payload: {\n        progress: current / total,\n        wpm: current / 5 / ((Date.now() - (state.startTime || 0)) / 60000)\n      }\n    })\n  }\n\n  return (\n    <Wrapper>\n      <Container>\n        <GameText\n          onStart={(): void => dispatch({ type: 'START_GAME', payload: Date.now() })}\n          exercise={data!.exercise}\n          onProgress={handleProgress}\n        />\n        <Status>\n          {`${(state.progress * 100).toFixed(0)}% completed ${state.wpm ? `, ${state.wpm.toFixed(0)} WPM` : ''}`}\n        </Status>\n        <CameraView />\n      </Container>\n    </Wrapper>\n  )\n}\n\nexport default Game\n","import GameData from './code_response.json'\n\nfunction getGameData(): Promise<any> {\n  return new Promise((res): ReturnType<typeof setTimeout> => setTimeout((): void => res(GameData), 1))\n}\n\nconst requests = {\n  getGameData\n}\n\nexport default {\n  requests\n}\n","import React from 'react'\nimport agent from '../../api/agent'\nimport { getRandomItemFromArray } from '../../shared/index'\n\ninterface State {\n  isLoading: boolean\n  isError: boolean\n  data: any\n}\n\nconst dataFetchReducer = (state, action): State => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state, isLoading: true, isError: false }\n    case 'FETCH_SUCCESS':\n      return { ...state, isLoading: false, isError: false, data: action.payload }\n    case 'FETCH_FAILURE':\n      return { ...state, isLoading: false, isError: true }\n    default:\n      throw new Error('Wrong action provided to the dataFetchReducer')\n  }\n}\n\nfunction UseDataApi(): [State] {\n  const [state, dispatch] = React.useReducer(dataFetchReducer, {\n    isLoading: true,\n    isError: false,\n    data: []\n  })\n\n  React.useEffect(() => {\n    const fetchData = async (): Promise<void> => {\n      dispatch({ type: 'FETCH_INIT' })\n      try {\n        const result = await agent.requests.getGameData()\n        dispatch({ type: 'FETCH_SUCCESS', payload: getRandomItemFromArray(result) })\n      } catch (error) {\n        dispatch({ type: 'FETCH_FAILURE' })\n      }\n    }\n    fetchData()\n  }, [])\n\n  return [state]\n}\n\nexport default UseDataApi\n","export function getRandomItemFromArray(items: any[]): any {\n  const rand = Math.floor(Math.random() * items.length)\n  return items[rand]\n}\n","import React from 'react'\nimport Game from './game.component'\nimport UseDataApi from '../hooks/useApiData'\n\nfunction GameContainer(): JSX.Element {\n  const [{ data, isLoading, isError }] = UseDataApi()\n\n  return isLoading ? <div>LOADING...</div> : isError ? <div>Error</div> : <Game data={data} />\n}\n\nexport default GameContainer\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { css } from '@emotion/core'\n\nexport const ResetCss = css`\n  /* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  b,\n  u,\n  i,\n  center,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  canvas,\n  details,\n  embed,\n  figure,\n  figcaption,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  output,\n  ruby,\n  section,\n  summary,\n  time,\n  mark,\n  audio,\n  video {\n    margin: 0;\n    margin-block-start: 0;\n    margin-block-end: 0;\n    margin-inline-start: 0;\n    margin-inline-end: 0;\n    padding-inline-start: 0;\n    padding: 0;\n    border: 0;\n    font: inherit;\n    font-size: 100%;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  section {\n    display: block;\n  }\n\n  body {\n    line-height: 1;\n  }\n\n  ol,\n  ul {\n    list-style: none;\n  }\n\n  blockquote,\n  q {\n    quotes: none;\n  }\n\n  blockquote::before,\n  blockquote::after,\n  q::before,\n  q::after {\n    content: '';\n  }\n\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n`\n","import { css } from '@emotion/core'\nimport StarcraftWoff from '../assets/fonts/starcraftnormal.woff'\nimport StarcraftWoff2 from '../assets/fonts/starcraftnormal.woff2'\n\nexport const FontCss = css`\n  @font-face {\n    font-family: 'Starcraft';\n    src: url(${StarcraftWoff2}) format('woff2'), url(${StarcraftWoff}) format('woff');\n    font-weight: 400;\n    font-style: normal;\n    font-display: swap;\n  }\n`\n","import React, { ReactElement } from 'react'\nimport { Global, css } from '@emotion/core'\nimport { ResetCss } from './reset'\nimport { FontCss } from './fonts'\nimport themeUtils from './themeUtils'\n\nfunction GlobalStyles(): ReactElement {\n  return (\n    <Global\n      styles={css`\n        ${ResetCss};\n        ${FontCss};\n\n        *,\n        *::before,\n        *::after {\n          box-sizing: border-box;\n          margin: 0;\n          padding: 0;\n        }\n\n        html {\n          font-size: 62.5%;\n          height: 100%;\n          /* scroll-behavior: smooth; */\n        }\n\n        body {\n          font-family: ${themeUtils.fontFamily.primary};\n          font-weight: 400;\n          width: 100%;\n          height: 100%;\n          color: ${themeUtils.color.white};\n          -webkit-touch-callout: none;\n        }\n\n        .root {\n          width: 100%;\n          height: 100%;\n          position: relative;\n        }\n\n        strong {\n          font-weight: bold;\n        }\n\n        a {\n          color: inherit;\n          text-decoration: none;\n        }\n\n        button,\n        input,\n        a {\n          border: 0;\n          background: none;\n\n          &:focus {\n            outline: none;\n          }\n        }\n      `}\n    />\n  )\n}\n\nexport default GlobalStyles\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Game } from './components/game'\nimport * as serviceWorker from './serviceWorker'\nimport GlobalStyles from './styles/global'\n\nReactDOM.render(\n  <React.Fragment>\n    <GlobalStyles />\n    <Game />\n  </React.Fragment>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}